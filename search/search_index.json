{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"StashCache This documentation is legacy. Please view the current documentation on the OSG Documentation website. This documentation is for Site Admins and OSG Operations team who manage StashCache nodes (origin or cache server; or redirectors). Main functionality of StashCache is based on XRootD technology, there are other components involved to function StashCache properly, though. E.g. if you are a user of \"stashcp\" you want to follow this document instead. StashCache operations consist of the following documents: StashCache caches : Managed by an organization, \"cache\" server to keep data cached and immediately available (via stashcp )within Stash federation (without re-transfering from \"origin\"). StashCache origins : Managed by an organization, \"origin\" is data server to host files locally and serve them to users upon transfer request (via stashcp ) unless data are already cached. StashCache redirectors : Redirectors are managed by OSG Operations. Redirectors help clients locate the correct origin server to retrieve data. StashCache upgrades : Keeps track of versions deployed at sites as well as other information about OS, system resources, connectivity, etc.","title":"Home"},{"location":"#stashcache","text":"","title":"StashCache"},{"location":"#this-documentation-is-legacy-please-view-the-current-documentation-on-the-osg-documentation-website","text":"This documentation is for Site Admins and OSG Operations team who manage StashCache nodes (origin or cache server; or redirectors). Main functionality of StashCache is based on XRootD technology, there are other components involved to function StashCache properly, though. E.g. if you are a user of \"stashcp\" you want to follow this document instead. StashCache operations consist of the following documents: StashCache caches : Managed by an organization, \"cache\" server to keep data cached and immediately available (via stashcp )within Stash federation (without re-transfering from \"origin\"). StashCache origins : Managed by an organization, \"origin\" is data server to host files locally and serve them to users upon transfer request (via stashcp ) unless data are already cached. StashCache redirectors : Redirectors are managed by OSG Operations. Redirectors help clients locate the correct origin server to retrieve data. StashCache upgrades : Keeps track of versions deployed at sites as well as other information about OS, system resources, connectivity, etc.","title":"This documentation is legacy.  Please view the current documentation on the OSG Documentation website."},{"location":"admin/configure-cache-auth/","text":"Configuring Cache Server with authentication Before you continue, make sure default Cache Server is configured on first place. Enabling authenticated cache is optionali and additional do default cache instance. This chapter describes all the steps needed. Packages installed: stashcache-daemon fetch-crl stashcache-cache-server xrootd-lcmaps globus-proxy-utils Authenticated Cache server Make sure you've in place following pre-requisities from install step here : Service certificate: create copy of the certificate to /etc/grid-security/xrd/xrd{cert,key}.pem Set owner of the directory /etc/grid-security/xrd/ to xrootd:xrootd user: $ chown -R xrootd:xrootd /etc/grid-security/xrd/ Network ports : allow connections on port 8443 (TCP) Beware, authenticated cache requires presence of the config file /etc/xrootd/xrootd-stashcache-cache-server.cfg . Now, create symbolic link to existing configuration file with -auth postfix: [root@client ~]$ cd /etc/xrootd/ [root@client ~]$ ln -s xrootd-stashcache-cache-server.cfg xrootd-stashcache-cache-server-auth.cfg RHEL7 On RHEL7 system, you need to configure and run following systemd units: xrootd@stashcache-cache-server-auth.service xrootd-renew-proxy.service xrootd-renew-proxy.timer fetch-crl-cron Auth.service Enable xrootd@stashcache-cache-server-auth.service instance: [root@client ~]$ systemctl enable xrootd@stashcache-cache-server-auth Reload daemons: [root@client ~]$ systemctl daemon-reload Proxy.service Create the file with following content: [root@client ~]$ cat /usr/lib/systemd/system/xrootd-renew-proxy.service [Unit] Description=Renew xrootd proxy [Service] User=xrootd Group=xrootd Type = oneshot ExecStart = /bin/grid-proxy-init -cert /etc/grid-security/xrd/xrdcert.pem -key /etc/grid-security/xrd/xrdkey.pem -out /tmp/x509up_xrootd -valid 48:00 [Install] WantedBy=multi-user.target Reload daemons: [root@client ~]$ systemctl daemon-reload Proxy.timer Create the file with following content: [root@client ~]$ cat /usr/lib/systemd/system/xrootd-renew-proxy.timer [Unit] Description=Renew proxy every day at midnight [Timer] OnCalendar=*-*-* 00:00:00 Unit=xrootd-renew-proxy.service [Install] WantedBy=multi-user.target Enable timer: [root@client ~]$ systemctl enable xrootd-renew-proxy.timer Start and check if timer is active and working: [root@client ~]$ systemctl start xrootd-renew-proxy.timer ... [root@client ~]$ systemctl is-active xrootd-renew-proxy.timer active [root@client ~]$ systemctl list-timers xrootd-renew-proxy* NEXT LEFT LAST PASSED UNIT ACTIVATES Thu 2017-05-11 00:00:00 CDT 54min left Wed 2017-05-10 00:00:01 CDT 23h ago xrootd-renew-proxy.timer xrootd-renew-proxy.service Reload daemons: [root@client ~]$ systemctl daemon-reload CRLs updates It is very important to keep CRL list updated from cron: 1. Enable fetch-crl-cron [root@client ~]$ systemctl enable fetch-crl-cron Start fetch-crl-cron [root@client ~]$ systemctl start fetch-crl-cron Reload daemons: [root@client ~]$ systemctl daemon-reload Add Authfile for authenticated cache Authfile for authenticated cache may differ from /etc/xrootd/Authfile-noauth defined in non-authenticated cache configuration . Example: [root@client ~]$ cat /etc/xrootd/Authfile-auth g /osg/ligo /user/ligo r u ligo /user/ligo lr / rl When ready with configuration, please register and start your StashCache Cache server.","title":"Configuring Cache Server with authentication"},{"location":"admin/configure-cache-auth/#configuring-cache-server-with-authentication","text":"Before you continue, make sure default Cache Server is configured on first place. Enabling authenticated cache is optionali and additional do default cache instance. This chapter describes all the steps needed. Packages installed: stashcache-daemon fetch-crl stashcache-cache-server xrootd-lcmaps globus-proxy-utils","title":"Configuring Cache Server with authentication"},{"location":"admin/configure-cache-auth/#authenticated-cache-server","text":"Make sure you've in place following pre-requisities from install step here : Service certificate: create copy of the certificate to /etc/grid-security/xrd/xrd{cert,key}.pem Set owner of the directory /etc/grid-security/xrd/ to xrootd:xrootd user: $ chown -R xrootd:xrootd /etc/grid-security/xrd/ Network ports : allow connections on port 8443 (TCP) Beware, authenticated cache requires presence of the config file /etc/xrootd/xrootd-stashcache-cache-server.cfg . Now, create symbolic link to existing configuration file with -auth postfix: [root@client ~]$ cd /etc/xrootd/ [root@client ~]$ ln -s xrootd-stashcache-cache-server.cfg xrootd-stashcache-cache-server-auth.cfg","title":"Authenticated Cache server"},{"location":"admin/configure-cache-auth/#rhel7","text":"On RHEL7 system, you need to configure and run following systemd units: xrootd@stashcache-cache-server-auth.service xrootd-renew-proxy.service xrootd-renew-proxy.timer fetch-crl-cron","title":"RHEL7"},{"location":"admin/configure-cache-auth/#authservice","text":"Enable xrootd@stashcache-cache-server-auth.service instance: [root@client ~]$ systemctl enable xrootd@stashcache-cache-server-auth Reload daemons: [root@client ~]$ systemctl daemon-reload","title":"Auth.service"},{"location":"admin/configure-cache-auth/#proxyservice","text":"Create the file with following content: [root@client ~]$ cat /usr/lib/systemd/system/xrootd-renew-proxy.service [Unit] Description=Renew xrootd proxy [Service] User=xrootd Group=xrootd Type = oneshot ExecStart = /bin/grid-proxy-init -cert /etc/grid-security/xrd/xrdcert.pem -key /etc/grid-security/xrd/xrdkey.pem -out /tmp/x509up_xrootd -valid 48:00 [Install] WantedBy=multi-user.target Reload daemons: [root@client ~]$ systemctl daemon-reload","title":"Proxy.service"},{"location":"admin/configure-cache-auth/#proxytimer","text":"Create the file with following content: [root@client ~]$ cat /usr/lib/systemd/system/xrootd-renew-proxy.timer [Unit] Description=Renew proxy every day at midnight [Timer] OnCalendar=*-*-* 00:00:00 Unit=xrootd-renew-proxy.service [Install] WantedBy=multi-user.target Enable timer: [root@client ~]$ systemctl enable xrootd-renew-proxy.timer Start and check if timer is active and working: [root@client ~]$ systemctl start xrootd-renew-proxy.timer ... [root@client ~]$ systemctl is-active xrootd-renew-proxy.timer active [root@client ~]$ systemctl list-timers xrootd-renew-proxy* NEXT LEFT LAST PASSED UNIT ACTIVATES Thu 2017-05-11 00:00:00 CDT 54min left Wed 2017-05-10 00:00:01 CDT 23h ago xrootd-renew-proxy.timer xrootd-renew-proxy.service Reload daemons: [root@client ~]$ systemctl daemon-reload","title":"Proxy.timer"},{"location":"admin/configure-cache-auth/#crls-updates","text":"It is very important to keep CRL list updated from cron: 1. Enable fetch-crl-cron [root@client ~]$ systemctl enable fetch-crl-cron Start fetch-crl-cron [root@client ~]$ systemctl start fetch-crl-cron Reload daemons: [root@client ~]$ systemctl daemon-reload","title":"CRLs updates"},{"location":"admin/configure-cache-auth/#add-authfile-for-authenticated-cache","text":"Authfile for authenticated cache may differ from /etc/xrootd/Authfile-noauth defined in non-authenticated cache configuration . Example: [root@client ~]$ cat /etc/xrootd/Authfile-auth g /osg/ligo /user/ligo r u ligo /user/ligo lr / rl When ready with configuration, please register and start your StashCache Cache server.","title":"Add Authfile for authenticated cache"},{"location":"admin/configure-cache-optional/","text":"Optional configuration Adjust disk utilization To adjust the disk utilization of your StashCache cache, modify the values of pfc.diskusage in /etc/xrootd/xrootd-stashcache-cache-server.cfg : pfc.diskusage 0.98 .99 The first value and second values correspond to the low and high usage watermarks, respectively, in percentages. When the high watermark is reached, the XRootD service will automatically purge cache objects down to the low watermark. Enable remote debugging This feature enables remote debugging via the digFS read-only file system, it's optional line in the config file : xrootd.diglib * /etc/xrootd/digauth.cf where /etc/xrootd/digauth.cf may have following content: all allow host h=abc.org all allow host h=*.xyz.edu When ready with configuration, please register and start your StashCache Cache server.","title":"Optional configuration"},{"location":"admin/configure-cache-optional/#optional-configuration","text":"","title":"Optional configuration"},{"location":"admin/configure-cache-optional/#adjust-disk-utilization","text":"To adjust the disk utilization of your StashCache cache, modify the values of pfc.diskusage in /etc/xrootd/xrootd-stashcache-cache-server.cfg : pfc.diskusage 0.98 .99 The first value and second values correspond to the low and high usage watermarks, respectively, in percentages. When the high watermark is reached, the XRootD service will automatically purge cache objects down to the low watermark.","title":"Adjust disk utilization"},{"location":"admin/configure-cache-optional/#enable-remote-debugging","text":"This feature enables remote debugging via the digFS read-only file system, it's optional line in the config file : xrootd.diglib * /etc/xrootd/digauth.cf where /etc/xrootd/digauth.cf may have following content: all allow host h=abc.org all allow host h=*.xyz.edu When ready with configuration, please register and start your StashCache Cache server.","title":"Enable remote debugging"},{"location":"admin/configure-cache/","text":"Configuring Cache Server Packages installed: stashcache-daemon fetch-crl stashcache-cache-server The following section describes required configuration to have a functional non-authenticated StashCache Cache (not origin server!). StashCache Cache package stashcache-cache-server needs to be manually configured from pre-existing XRootD configuration. Note While example of the configuration file below provides combination of authenticated and non-authenticated Cache , the non-authenticated cache is considered to be default and authenticated cache just optional (additional) service. If you're about to configure in addition authenticated cache read to the end of this document and then follow post-installation of authenticated part here . For configuring cache one needs to define directive pss.origin redirector.osgstorage.org:1024 (not all.manager redirector.osgstorage.org+ 1213 directive as it is in case of configuring origin ). StashCache-daemon package provides default configuration file /etc/xrootd/xrootd-stashcache-cache-server.cfg . Example of the configuration of cache server is as follows: all.export / set cachedir = /stash xrd.allow host * sec.protocol host all.adminpath /var/spool/xrootd xrootd.trace emsg login stall redirect ofs.trace all xrd.trace all cms.trace all ofs.osslib libXrdPss.so pss.origin redirector.osgstorage.org:1094 pss.cachelib libXrdFileCache.so pss.setopt DebugLevel 1 oss.localroot $(cachedir) # Config for v1 (xrootd =v4.5.0) #pfc.nramprefetch 4 #pfc.nramread 4 #pfc.diskusage 0.98 0.99 # Config for v2 (xrootd v4.5.0) pfc.blocksize 512k pfc.ram 32g pfc.prefetch 10 pfc.diskusage 0.98 0.99 xrootd.seclib /usr/lib64/libXrdSec.so sec.protocol /usr/lib64 gsi \\ -certdir:/etc/grid-security/certificates \\ -cert:/etc/grid-security/xrd/xrdcert.pem \\ -key:/etc/grid-security/xrd/xrdkey.pem \\ -crl:1 \\ -authzfun:libXrdLcmaps.so \\ -authzfunparms:--lcmapscfg,/etc/xrootd/lcmaps.cfg,--loglevel,4|useglobals \\ -gmapopt:10 \\ -authzto:3600 # Enable the authorization module, even if we have an unauthenticated instance. ofs.authorize 1 acc.audit deny grant # Run the authenticated instance on port 8443 (Xrootd and HTTPS) # Notice authenticated and unauthenticated instances use separate auth # files. if named stashcache-cache-server-auth #pss.origin red-gridftp4.unl.edu:1094 xrd.port 8443 acc.authdb /etc/xrootd/Authfile-auth sec.protbind * gsi xrd.protocol http:8443 libXrdHttp.so pss.origin xrootd-local.unl.edu:1094 else # Unauthenticated instance runs on port 1094 (Xrootd) and 8000 (HTTP/HTTPS) acc.authdb /etc/xrootd/Authfile-noauth #sec.protbind * none sec.protbind * none xrd.protocol http:8000 libXrdHttp.so fi http.cadir /etc/grid-security/certificates http.cert /etc/grid-security/xrd/xrdcert.pem http.key /etc/grid-security/xrd/xrdkey.pem http.secxtractor /usr/lib64/libXrdLcmaps.so http.listingdeny yes http.staticpreload http://static/robots.txt /etc/xrootd/stashcache-robots.txt # Tune the client timeouts to more aggressively timeout. pss.setopt ParallelEvtLoop 10 pss.setopt RequestTimeout 25 pss.setopt ConnectTimeout 25 pss.setopt ConnectionRetry 2 #Sending monitoring information xrd.report uct2-collectd.mwt2.org:9931 xrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930 all.sitename Nebraska # Optional configuration # Remote debugging xrootd.diglib * /etc/xrootd/digauth.cf Add Authfile for non-authenticated cache In Authfile you want to allow local reads below $(cachedir) defined in the main config. Example of Authfile: [root@client ~]$ cat /etc/xrootd/Authfile-noauth u * /user/ligo -rl / rl Add Robots file [root@client ~]$ cat /etc/xrootd/stashcache-robots.txt User-agent: * Disallow: / RHEL7 On RHEL7 system, you need to run following systemd unit: systemctl start xrootd@stashcache-cache-server.service systemctl start condor.service Please, refer to start services document for more information. When ready with configuration, please register and start your StashCache Cache server. If you'd like to configure in addition authenticated cache instance, please follow this document.","title":"Configuring Cache Server"},{"location":"admin/configure-cache/#configuring-cache-server","text":"Packages installed: stashcache-daemon fetch-crl stashcache-cache-server The following section describes required configuration to have a functional non-authenticated StashCache Cache (not origin server!). StashCache Cache package stashcache-cache-server needs to be manually configured from pre-existing XRootD configuration. Note While example of the configuration file below provides combination of authenticated and non-authenticated Cache , the non-authenticated cache is considered to be default and authenticated cache just optional (additional) service. If you're about to configure in addition authenticated cache read to the end of this document and then follow post-installation of authenticated part here . For configuring cache one needs to define directive pss.origin redirector.osgstorage.org:1024 (not all.manager redirector.osgstorage.org+ 1213 directive as it is in case of configuring origin ). StashCache-daemon package provides default configuration file /etc/xrootd/xrootd-stashcache-cache-server.cfg . Example of the configuration of cache server is as follows: all.export / set cachedir = /stash xrd.allow host * sec.protocol host all.adminpath /var/spool/xrootd xrootd.trace emsg login stall redirect ofs.trace all xrd.trace all cms.trace all ofs.osslib libXrdPss.so pss.origin redirector.osgstorage.org:1094 pss.cachelib libXrdFileCache.so pss.setopt DebugLevel 1 oss.localroot $(cachedir) # Config for v1 (xrootd =v4.5.0) #pfc.nramprefetch 4 #pfc.nramread 4 #pfc.diskusage 0.98 0.99 # Config for v2 (xrootd v4.5.0) pfc.blocksize 512k pfc.ram 32g pfc.prefetch 10 pfc.diskusage 0.98 0.99 xrootd.seclib /usr/lib64/libXrdSec.so sec.protocol /usr/lib64 gsi \\ -certdir:/etc/grid-security/certificates \\ -cert:/etc/grid-security/xrd/xrdcert.pem \\ -key:/etc/grid-security/xrd/xrdkey.pem \\ -crl:1 \\ -authzfun:libXrdLcmaps.so \\ -authzfunparms:--lcmapscfg,/etc/xrootd/lcmaps.cfg,--loglevel,4|useglobals \\ -gmapopt:10 \\ -authzto:3600 # Enable the authorization module, even if we have an unauthenticated instance. ofs.authorize 1 acc.audit deny grant # Run the authenticated instance on port 8443 (Xrootd and HTTPS) # Notice authenticated and unauthenticated instances use separate auth # files. if named stashcache-cache-server-auth #pss.origin red-gridftp4.unl.edu:1094 xrd.port 8443 acc.authdb /etc/xrootd/Authfile-auth sec.protbind * gsi xrd.protocol http:8443 libXrdHttp.so pss.origin xrootd-local.unl.edu:1094 else # Unauthenticated instance runs on port 1094 (Xrootd) and 8000 (HTTP/HTTPS) acc.authdb /etc/xrootd/Authfile-noauth #sec.protbind * none sec.protbind * none xrd.protocol http:8000 libXrdHttp.so fi http.cadir /etc/grid-security/certificates http.cert /etc/grid-security/xrd/xrdcert.pem http.key /etc/grid-security/xrd/xrdkey.pem http.secxtractor /usr/lib64/libXrdLcmaps.so http.listingdeny yes http.staticpreload http://static/robots.txt /etc/xrootd/stashcache-robots.txt # Tune the client timeouts to more aggressively timeout. pss.setopt ParallelEvtLoop 10 pss.setopt RequestTimeout 25 pss.setopt ConnectTimeout 25 pss.setopt ConnectionRetry 2 #Sending monitoring information xrd.report uct2-collectd.mwt2.org:9931 xrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930 all.sitename Nebraska # Optional configuration # Remote debugging xrootd.diglib * /etc/xrootd/digauth.cf","title":"Configuring Cache Server"},{"location":"admin/configure-cache/#add-authfile-for-non-authenticated-cache","text":"In Authfile you want to allow local reads below $(cachedir) defined in the main config. Example of Authfile: [root@client ~]$ cat /etc/xrootd/Authfile-noauth u * /user/ligo -rl / rl","title":"Add Authfile for non-authenticated cache"},{"location":"admin/configure-cache/#add-robots-file","text":"[root@client ~]$ cat /etc/xrootd/stashcache-robots.txt User-agent: * Disallow: /","title":"Add Robots file"},{"location":"admin/configure-cache/#rhel7","text":"On RHEL7 system, you need to run following systemd unit: systemctl start xrootd@stashcache-cache-server.service systemctl start condor.service Please, refer to start services document for more information. When ready with configuration, please register and start your StashCache Cache server. If you'd like to configure in addition authenticated cache instance, please follow this document.","title":"RHEL7"},{"location":"admin/configure-origin/","text":"Configuring Origin Server Packages installed: stashcache-daemon fetch-crl stashcache-origin-server The following section describes required configuration to have a functional StashCache Origin (not cache server!). StashCache Origin package stashcache-cache-origin needs to be manually configured from pre-existing XRootD configuration. Origin server The origin server connects only to a redirector (not directly to cache server), thus minimal xrootd configuration is required. StashCache-daemon package provides default configuration file /etc/xrootd/xrootd-stashcache-origin-server.cfg . Example of the configuration of origin server is as follows: all.export / set localroot = /stash xrd.port 1094 all.role server all.manager redirector.osgstorage.org+ 1213 oss.localroot $(localroot) xrootd.trace emsg login stall redirect ofs.trace none xrd.trace conn cms.trace all sec.protocol host sec.protbind * none all.adminpath /var/spool/xrootd all.pidpath /var/run/xrootd # Sending monitoring information xrd.report uct2-collectd.mwt2.org:9931 xrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930 RHEL7 On RHEL7 system, you need to run following systemd units: xrootd@stashcache-cache-origin.service cmsd@stashcache-cache-origin.service RHEL6 ...to be added When ready with configuration, please register and start your StashCache Origin server.","title":"Configuring Origin Server"},{"location":"admin/configure-origin/#configuring-origin-server","text":"Packages installed: stashcache-daemon fetch-crl stashcache-origin-server The following section describes required configuration to have a functional StashCache Origin (not cache server!). StashCache Origin package stashcache-cache-origin needs to be manually configured from pre-existing XRootD configuration.","title":"Configuring Origin Server"},{"location":"admin/configure-origin/#origin-server","text":"The origin server connects only to a redirector (not directly to cache server), thus minimal xrootd configuration is required. StashCache-daemon package provides default configuration file /etc/xrootd/xrootd-stashcache-origin-server.cfg . Example of the configuration of origin server is as follows: all.export / set localroot = /stash xrd.port 1094 all.role server all.manager redirector.osgstorage.org+ 1213 oss.localroot $(localroot) xrootd.trace emsg login stall redirect ofs.trace none xrd.trace conn cms.trace all sec.protocol host sec.protbind * none all.adminpath /var/spool/xrootd all.pidpath /var/run/xrootd # Sending monitoring information xrd.report uct2-collectd.mwt2.org:9931 xrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930","title":"Origin server"},{"location":"admin/configure-origin/#rhel7","text":"On RHEL7 system, you need to run following systemd units: xrootd@stashcache-cache-origin.service cmsd@stashcache-cache-origin.service","title":"RHEL7"},{"location":"admin/configure-origin/#rhel6","text":"...to be added When ready with configuration, please register and start your StashCache Origin server.","title":"RHEL6"},{"location":"admin/install/","text":"Installation Guide This document describes how to install a StashCache service (Origin or Cache). The installation utilizes XRootD and HTCondor for file storage and monitoring, respectively. The role of the Origin and Cache is different, following explanation may help to decide when would you need to install which: StashCache cache : role of \"cache\" server is to keep data cached and immediately available (via stashcp or CVMFS) within Stash federation (without re-transfering from \"origin\"). StashCache origin : \"origin\" is data server to host files locally and serve them to users upon transfer request (via stashcp ) unless data are already cached. Installation pre-requisities for Origin and Cache Before starting the installation process, consider the following mandatory points: User IDs: If they do not exist already, the installation will create the Linux user IDs condor and xrootd Service certificate: The StashCache service uses a host certificate at /etc/grid-security/host*.pem Network ports: The StashCache service must listen on ports: the central collector on port 9619 (TCP) XRootD service on port 1094 (TCP) and allow XRootD service over HTTP on port 8000 (TCP) Hardware requirements: We recommend that a StashCache server has at least 10Gbps connectivity, 1TB of disk space, and 8GB of RAM. More information about hardware and system configuration of existing caches you can find at Upgrade status page . If installing the (optional) authenticated StashCache, you need to do in addition the following: Service certificate: create copy of the certificate to /etc/grid-security/xrd/xrd{cert,key}.pem set owner of the directory /etc/grid-security/xrd/ to xrootd:xrootd user: $ chown -R xrootd:xrootd /etc/grid-security/xrd/ Network ports : allow connections on port 8443 (TCP) As with all OSG software installations, there are some one-time steps to prepare in advance: Ensure the host has a supported operating system Obtain root access to the host Prepare the required Yum repositories Install CA certificates Installing the StashCache metapackage The StashCache daemon consists of an XRootD server and an HTCondor-based service for collecting and reporting statistics about the cache. To simplify installation, OSG provides convenience RPMs that install all required software with a single command: Clean yum cache: [root@client ~]$ yum clean all --enablerepo=* Update software, this command will update all packages on your system: [root@client ~]$ yum update Install the StashCache metapackage from OSG repository: if you are installing Origin server : [root@client ~]$ yum install stashcache-daemon fetch-crl stashcache-cache-origin if you are installing Cache server : [root@client ~]$ yum install stashcache-daemon fetch-crl stashcache-cache-server !!! Note: If installing authenticated StashCache Cache server, you need additional packages to be installed: [root@client ~]$ yum install xrootd-lcmaps globus-proxy-utils Mount the disk that will be used for the cache to /stash and set owner of the directory to xrootd:xrootd user.","title":"Install"},{"location":"admin/install/#installation-guide","text":"This document describes how to install a StashCache service (Origin or Cache). The installation utilizes XRootD and HTCondor for file storage and monitoring, respectively. The role of the Origin and Cache is different, following explanation may help to decide when would you need to install which: StashCache cache : role of \"cache\" server is to keep data cached and immediately available (via stashcp or CVMFS) within Stash federation (without re-transfering from \"origin\"). StashCache origin : \"origin\" is data server to host files locally and serve them to users upon transfer request (via stashcp ) unless data are already cached.","title":"Installation Guide"},{"location":"admin/install/#installation-pre-requisities-for-origin-and-cache","text":"Before starting the installation process, consider the following mandatory points: User IDs: If they do not exist already, the installation will create the Linux user IDs condor and xrootd Service certificate: The StashCache service uses a host certificate at /etc/grid-security/host*.pem Network ports: The StashCache service must listen on ports: the central collector on port 9619 (TCP) XRootD service on port 1094 (TCP) and allow XRootD service over HTTP on port 8000 (TCP) Hardware requirements: We recommend that a StashCache server has at least 10Gbps connectivity, 1TB of disk space, and 8GB of RAM. More information about hardware and system configuration of existing caches you can find at Upgrade status page . If installing the (optional) authenticated StashCache, you need to do in addition the following: Service certificate: create copy of the certificate to /etc/grid-security/xrd/xrd{cert,key}.pem set owner of the directory /etc/grid-security/xrd/ to xrootd:xrootd user: $ chown -R xrootd:xrootd /etc/grid-security/xrd/ Network ports : allow connections on port 8443 (TCP) As with all OSG software installations, there are some one-time steps to prepare in advance: Ensure the host has a supported operating system Obtain root access to the host Prepare the required Yum repositories Install CA certificates","title":"Installation pre-requisities for Origin and Cache"},{"location":"admin/install/#installing-the-stashcache-metapackage","text":"The StashCache daemon consists of an XRootD server and an HTCondor-based service for collecting and reporting statistics about the cache. To simplify installation, OSG provides convenience RPMs that install all required software with a single command: Clean yum cache: [root@client ~]$ yum clean all --enablerepo=* Update software, this command will update all packages on your system: [root@client ~]$ yum update Install the StashCache metapackage from OSG repository: if you are installing Origin server : [root@client ~]$ yum install stashcache-daemon fetch-crl stashcache-cache-origin if you are installing Cache server : [root@client ~]$ yum install stashcache-daemon fetch-crl stashcache-cache-server !!! Note: If installing authenticated StashCache Cache server, you need additional packages to be installed: [root@client ~]$ yum install xrootd-lcmaps globus-proxy-utils Mount the disk that will be used for the cache to /stash and set owner of the directory to xrootd:xrootd user.","title":"Installing the StashCache metapackage"},{"location":"ops/redirector/","text":"Installing XRootD StashCache Federation Redirector Use these instructions to install an XRootD StashCache Federation Redirector. These instructions assume that you have SL, CentOS, or RHEL 6. Redirector server recommendations The service is very lightweight depending on number of subscribers (caching proxies), though. Recommended would be use machine with 4GB of RAM and 2 cores. Load avg is practically close to zero, therefore 2 cores is sufficient with as much RAM as you can reasonably ask for. As far as disk goes, something reasonable like 500GB of local storage is good enough, and best if the server has a 10 Gbps NIC at least. You must have port 1094 and 1213 open to all traffic; otherwise the redirector will not work. In addition (this is optional), we run separate xrootd server instance on redirector host for RSV tests which needs open port 2094 . Installation using yum If you don't want to use yum, refer to http://xrootd.org/dload.html for other methods. Use predefined OSG repo or copy http://xrootd.org/binaries/xrootd-stable-slc6.repo to /etc/yum.repos.d Do: yum install xrootd and answer every question with y Configure the (local) server for RSV tests (optional) Edit the configuration file /etc/xrootd/xrootd-clustered-server.cfg to look like this: xrd.port 2094 if exec xrootd all.adminpath /var/spool/xrootd all.role server all.export /stash/ #Production Redirector DNS alias all.manager redirector.osgstorage.org+ 1213 #ITB Redirector DNS alias #all.manager stash-itb.osgstorage.org+ 1213 For the RSV test purpose make sure the testing file is present on the file system: /stash/user/test.1M Configure the redirector for caches and origins Edit the configuration file ( /etc/xrootd/xrootd-clustered.cfg ) to look as follows: all.export / xrd.allow host * cms.allow host * sec.protocol host sec.protbind * none all.adminpath /var/spool/xrootd all.pidpath /var/run/xrootd xrootd.trace emsg login stall redirect ofs.trace all xrd.trace all debug cms.trace all debug xrd.port 1094 all.role meta manager #Production Redirector DNS alias all.manager meta all redirector.osgstorage.org+ 1213 all.sitename OSG-StashCache-Redirector #ITB Redirector DNS alias #all.manager meta all stash-itb.osgstorage.org+ 1213 #all.sitename OSG-StashCache-ITB-Redirector # XRootD Stats - sends UDP packets xrd.report uct2-collectd.mwt2.org:9931 xrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930 Change ownership of these directories: chown -R xrootd: /var/spool/xrootd chown -R xrootd: /var/log/xrootd chown -R xrootd: /stash Start the service: /etc/init.d/{xrootd,cmsd} start Set the service start when machine is rebooted: chkconfig --level 2345 {xrootd,cmsd} on Test that your instance works as expected, ideally would be setup origin server and subscribe into this redirector. Then, see the log files if origin server joined the Federation. Now, configure /etc/sysconfig/xrootd . Assuming host runs both server and redirector and the two configurations above are applied, make sure properly edit /etc/sysconfig/xrootd and add/modify these lines: XROOTD_DEFAULT_OPTIONS= -l /var/log/xrootd/xrootd.log -c /etc/xrootd/xrootd-clustered.cfg -k fifo CMSD_DEFAULT_OPTIONS= -l /var/log/xrootd/cmsd.log -c /etc/xrootd/xrootd-clustered.cfg -k fifo\u201d XROOTD_SERVER_OPTIONS= -l /var/log/xrootd/xrootd.log -c /etc/xrootd/xrootd-clustered-server.cfg -k fifo CMSD_SERVER_OPTIONS= -l /var/log/xrootd/cmsd.log -c /etc/xrootd/xrootd-clustered-server.cfg -k fifo\u201d ... ... XROOTD_INSTANCES= default server CMSD_INSTANCES= default server\u201d If you don't choose server instance setup for RSV tests you can skip lines XROOTD_SERVER_OPTIONS and CMSD_SERVER_OPTIONS as well as ==server== in the _INSTANCES lines. Test if Origins subscribe to redirector There is command xrdmapc in the xrootd-server packages that you can use to check what Origins subscribe to your redirector: $ xrdmapc --list all redirector.osgstorage.org:1094 0**** hcc-osg-redirector1.unl.edu:1094 Srv origin.ligo.caltech.edu:1094 Srv stashcache.fnal.gov:1094 Srv stash.osgconnect.net:1094 Srv csiu.grid.iu.edu:1094 Useful Project Links https://twiki.opensciencegrid.org/bin/view/SoftwareTeam/SW023_StashCacheDetails https://twiki.opensciencegrid.org/bin/view/SoftwareTeam/SW023_XrootdAcrossOsg","title":"Installing XRootD StashCache Federation Redirector"},{"location":"ops/redirector/#installing-xrootd-stashcache-federation-redirector","text":"Use these instructions to install an XRootD StashCache Federation Redirector. These instructions assume that you have SL, CentOS, or RHEL 6.","title":"Installing XRootD StashCache Federation Redirector"},{"location":"ops/redirector/#redirector-server-recommendations","text":"The service is very lightweight depending on number of subscribers (caching proxies), though. Recommended would be use machine with 4GB of RAM and 2 cores. Load avg is practically close to zero, therefore 2 cores is sufficient with as much RAM as you can reasonably ask for. As far as disk goes, something reasonable like 500GB of local storage is good enough, and best if the server has a 10 Gbps NIC at least. You must have port 1094 and 1213 open to all traffic; otherwise the redirector will not work. In addition (this is optional), we run separate xrootd server instance on redirector host for RSV tests which needs open port 2094 .","title":"Redirector server recommendations"},{"location":"ops/redirector/#installation-using-yum","text":"If you don't want to use yum, refer to http://xrootd.org/dload.html for other methods. Use predefined OSG repo or copy http://xrootd.org/binaries/xrootd-stable-slc6.repo to /etc/yum.repos.d Do: yum install xrootd and answer every question with y","title":"Installation using yum"},{"location":"ops/redirector/#configure-the-local-server-for-rsv-tests-optional","text":"Edit the configuration file /etc/xrootd/xrootd-clustered-server.cfg to look like this: xrd.port 2094 if exec xrootd all.adminpath /var/spool/xrootd all.role server all.export /stash/ #Production Redirector DNS alias all.manager redirector.osgstorage.org+ 1213 #ITB Redirector DNS alias #all.manager stash-itb.osgstorage.org+ 1213 For the RSV test purpose make sure the testing file is present on the file system: /stash/user/test.1M","title":"Configure the (local) server for RSV tests (optional)"},{"location":"ops/redirector/#configure-the-redirector-for-caches-and-origins","text":"Edit the configuration file ( /etc/xrootd/xrootd-clustered.cfg ) to look as follows: all.export / xrd.allow host * cms.allow host * sec.protocol host sec.protbind * none all.adminpath /var/spool/xrootd all.pidpath /var/run/xrootd xrootd.trace emsg login stall redirect ofs.trace all xrd.trace all debug cms.trace all debug xrd.port 1094 all.role meta manager #Production Redirector DNS alias all.manager meta all redirector.osgstorage.org+ 1213 all.sitename OSG-StashCache-Redirector #ITB Redirector DNS alias #all.manager meta all stash-itb.osgstorage.org+ 1213 #all.sitename OSG-StashCache-ITB-Redirector # XRootD Stats - sends UDP packets xrd.report uct2-collectd.mwt2.org:9931 xrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930 Change ownership of these directories: chown -R xrootd: /var/spool/xrootd chown -R xrootd: /var/log/xrootd chown -R xrootd: /stash Start the service: /etc/init.d/{xrootd,cmsd} start Set the service start when machine is rebooted: chkconfig --level 2345 {xrootd,cmsd} on Test that your instance works as expected, ideally would be setup origin server and subscribe into this redirector. Then, see the log files if origin server joined the Federation. Now, configure /etc/sysconfig/xrootd . Assuming host runs both server and redirector and the two configurations above are applied, make sure properly edit /etc/sysconfig/xrootd and add/modify these lines: XROOTD_DEFAULT_OPTIONS= -l /var/log/xrootd/xrootd.log -c /etc/xrootd/xrootd-clustered.cfg -k fifo CMSD_DEFAULT_OPTIONS= -l /var/log/xrootd/cmsd.log -c /etc/xrootd/xrootd-clustered.cfg -k fifo\u201d XROOTD_SERVER_OPTIONS= -l /var/log/xrootd/xrootd.log -c /etc/xrootd/xrootd-clustered-server.cfg -k fifo CMSD_SERVER_OPTIONS= -l /var/log/xrootd/cmsd.log -c /etc/xrootd/xrootd-clustered-server.cfg -k fifo\u201d ... ... XROOTD_INSTANCES= default server CMSD_INSTANCES= default server\u201d If you don't choose server instance setup for RSV tests you can skip lines XROOTD_SERVER_OPTIONS and CMSD_SERVER_OPTIONS as well as ==server== in the _INSTANCES lines.","title":"Configure the redirector for caches and origins"},{"location":"ops/redirector/#test-if-origins-subscribe-to-redirector","text":"There is command xrdmapc in the xrootd-server packages that you can use to check what Origins subscribe to your redirector: $ xrdmapc --list all redirector.osgstorage.org:1094 0**** hcc-osg-redirector1.unl.edu:1094 Srv origin.ligo.caltech.edu:1094 Srv stashcache.fnal.gov:1094 Srv stash.osgconnect.net:1094 Srv csiu.grid.iu.edu:1094","title":"Test if Origins subscribe to redirector"},{"location":"ops/redirector/#useful-project-links","text":"https://twiki.opensciencegrid.org/bin/view/SoftwareTeam/SW023_StashCacheDetails https://twiki.opensciencegrid.org/bin/view/SoftwareTeam/SW023_XrootdAcrossOsg","title":"Useful Project Links"},{"location":"ops/register/","text":"Registering StashCache and RSV monitoring To join in on the monitoring you'll need to Register your resource and send me some information about your cache instructions in the Configuring resource monitoring. You can see the current state of affairs here: Status history Status details (click on the \"+\" sign for more detail) * Availability metrics Registering StashCache To register a cache instance go here (with a cert in your browser). Fill in the required fields, example is displayed below: Registering StashCache resource information: The site must be OSG-GOC The resource group must be Monitored Caches Registering StashCache resource services: The service must be XRootD component !!! Note: Contact Information (will be pre-filled, add or modify as you see fit) - there are several types of contact, administrative and security are the most important to the GOC - DO NOT check the WLCG resource box; Add a Update comment if you'd like. Confirming and submitting StashCache resource registration: Tou must click the \"Acceptable Use Policy\" checkbox Hit the blue submit button. Configuring resource monitoring for RSV E.g. for the Nebraska instance the status of the following command is checked: [user@client ~]$ xrdcp root://hcc-stash.unl.edu//stash/user/test.1M /tmp/dump If the return status is zero, the cache is working, otherwise it is not. What we need from you is: * the equivalent //stash/user/test.1M a file you select that will always be there. When ready with registration, finish your configuration and start your StashCache services.","title":"Registering StashCache and RSV monitoring"},{"location":"ops/register/#registering-stashcache-and-rsv-monitoring","text":"To join in on the monitoring you'll need to Register your resource and send me some information about your cache instructions in the Configuring resource monitoring. You can see the current state of affairs here: Status history Status details (click on the \"+\" sign for more detail) * Availability metrics","title":"Registering StashCache and RSV monitoring"},{"location":"ops/register/#registering-stashcache","text":"To register a cache instance go here (with a cert in your browser). Fill in the required fields, example is displayed below:","title":"Registering StashCache"},{"location":"ops/register/#registering-stashcache-resource-information","text":"The site must be OSG-GOC The resource group must be Monitored Caches","title":"Registering StashCache resource information:"},{"location":"ops/register/#registering-stashcache-resource-services","text":"The service must be XRootD component !!! Note: Contact Information (will be pre-filled, add or modify as you see fit) - there are several types of contact, administrative and security are the most important to the GOC - DO NOT check the WLCG resource box; Add a Update comment if you'd like.","title":"Registering StashCache resource services:"},{"location":"ops/register/#confirming-and-submitting-stashcache-resource-registration","text":"Tou must click the \"Acceptable Use Policy\" checkbox Hit the blue submit button.","title":"Confirming and submitting StashCache resource registration:"},{"location":"ops/register/#configuring-resource-monitoring-for-rsv","text":"E.g. for the Nebraska instance the status of the following command is checked: [user@client ~]$ xrdcp root://hcc-stash.unl.edu//stash/user/test.1M /tmp/dump If the return status is zero, the cache is working, otherwise it is not. What we need from you is: * the equivalent //stash/user/test.1M a file you select that will always be there. When ready with registration, finish your configuration and start your StashCache services.","title":"Configuring resource monitoring for RSV"},{"location":"ops/start/","text":"Managing StashCache and associated services Ensure that your /stash disk is mounted, and then start xrootd and condor service. Non-authenticated Cache server services Software Service name Notes XRootD xrootd@stashcache-cache-server.service RHEL7 HTCondor condor.service RHEL7 Fetch CRL fetch-crl-cron RHEL7 Authenticated Cache server services Software Service name Notes XRootD xrootd@stashcache-cache-server-auth.service RHEL7 xrootd-renew-proxy.service RHEL7 xrootd-renew-proxy.timer RHEL7 HTCondor condor.service RHEL7 Fetch CRL fetch-crl-cron RHEL7 Test Cache server reports to HTCondor collector To verify that your cache is being monitored properly, run the following command: [user@client ~]$ condor_status -any -l -const Name==\\ xrootd@`hostname`\\ Where hostname is the string returned by the hostname command. The output of the above command should provide an HTCondor ClassAd that details the status of your cache. Test CVMFS accessibility via Cache server [user@client ~]$ curl -O http://cache_host:8000/user/dweitzel/public/blast/queries/query1 Origin server services Software Service name Notes XRootD xrootd@stashcache-origin-server.service RHEL7 XRootD cmsd@stashcache-origin-server.service RHEL7 Test Origin server availability in Stash Federation To verify that your origin is being subscribed to the redirector, run the following command: [user@client ~]$ xrdmapc --list s redirector.opensciencegrid.org:1094 0**** redirector.grid.iu.edu:1094 Srv redirector1.grid.iu.edu:2094 Srv csiu.grid.iu.edu:1094 Srv stash.osgconnect.net:1094 Srv stashcache.fnal.gov:1094 Srv redirector2.grid.iu.edu:2094 Srv ceph-gridftp1.grid.uchicago.edu:1094 The output should list hostname of your service. If not, look for any sings of trouble in the log files or contact us at stashcache@opensciencegrid.org . Start/stop services To... Run the command... Notes Start a service systemctl start SERVICE-NAME RHEL7 Stop a service systemctl stop SERVICE-NAME RHEL7 Status systemctl status SERVICE-NAME RHEL7 Enable systemctl enable SERVICE-NAME RHEL7","title":"Managing StashCache and associated services"},{"location":"ops/start/#managing-stashcache-and-associated-services","text":"Ensure that your /stash disk is mounted, and then start xrootd and condor service.","title":"Managing StashCache and associated services"},{"location":"ops/start/#non-authenticated-cache-server-services","text":"Software Service name Notes XRootD xrootd@stashcache-cache-server.service RHEL7 HTCondor condor.service RHEL7 Fetch CRL fetch-crl-cron RHEL7","title":"Non-authenticated Cache server services"},{"location":"ops/start/#authenticated-cache-server-services","text":"Software Service name Notes XRootD xrootd@stashcache-cache-server-auth.service RHEL7 xrootd-renew-proxy.service RHEL7 xrootd-renew-proxy.timer RHEL7 HTCondor condor.service RHEL7 Fetch CRL fetch-crl-cron RHEL7","title":"Authenticated Cache server services"},{"location":"ops/start/#test-cache-server-reports-to-htcondor-collector","text":"To verify that your cache is being monitored properly, run the following command: [user@client ~]$ condor_status -any -l -const Name==\\ xrootd@`hostname`\\ Where hostname is the string returned by the hostname command. The output of the above command should provide an HTCondor ClassAd that details the status of your cache.","title":"Test Cache server reports to HTCondor collector"},{"location":"ops/start/#test-cvmfs-accessibility-via-cache-server","text":"[user@client ~]$ curl -O http://cache_host:8000/user/dweitzel/public/blast/queries/query1","title":"Test CVMFS accessibility via Cache server"},{"location":"ops/start/#origin-server-services","text":"Software Service name Notes XRootD xrootd@stashcache-origin-server.service RHEL7 XRootD cmsd@stashcache-origin-server.service RHEL7","title":"Origin server services"},{"location":"ops/start/#test-origin-server-availability-in-stash-federation","text":"To verify that your origin is being subscribed to the redirector, run the following command: [user@client ~]$ xrdmapc --list s redirector.opensciencegrid.org:1094 0**** redirector.grid.iu.edu:1094 Srv redirector1.grid.iu.edu:2094 Srv csiu.grid.iu.edu:1094 Srv stash.osgconnect.net:1094 Srv stashcache.fnal.gov:1094 Srv redirector2.grid.iu.edu:2094 Srv ceph-gridftp1.grid.uchicago.edu:1094 The output should list hostname of your service. If not, look for any sings of trouble in the log files or contact us at stashcache@opensciencegrid.org .","title":"Test Origin server availability in Stash Federation"},{"location":"ops/start/#startstop-services","text":"To... Run the command... Notes Start a service systemctl start SERVICE-NAME RHEL7 Stop a service systemctl stop SERVICE-NAME RHEL7 Status systemctl status SERVICE-NAME RHEL7 Enable systemctl enable SERVICE-NAME RHEL7","title":"Start/stop services"},{"location":"ops/troubleshoot/","text":"Troubleshooting tips Get core file Common settings on the system: * set core file size to unlimited: ulimit -c unlimited Core from unexpected process quit First you need to activate xrootd to create core file when process exits unexpectedly: set environment variable upon cmsd/xrootd start DAEMON_COREFILE_LIMIT=\"unlimited\" RHEL6: variable set in /etc/sysconfig/xrootd or set as root ulimit -c unlimited RHEL7: you can use /etc/sysconfig/xrootd but prepare override file /etc/systemd/system/cmsd@clustered.service.d/override.conf with content: [Service] EnvironmentFile=-/etc/sysconfig/xrootd Core from running process directly if you know PID: $ gdb --pid=PID_NR (gdb) gcore if you know process name (e.g. xrootd): `$ gcore $(pidof xrootd)` Core from not running process: by default, XRootD should leave core file in the /var/spool/xrootd/ when it crashes","title":"Troubleshooting tips"},{"location":"ops/troubleshoot/#troubleshooting-tips","text":"","title":"Troubleshooting tips"},{"location":"ops/troubleshoot/#get-core-file","text":"Common settings on the system: * set core file size to unlimited: ulimit -c unlimited","title":"Get core file"},{"location":"ops/troubleshoot/#core-from-unexpected-process-quit","text":"First you need to activate xrootd to create core file when process exits unexpectedly: set environment variable upon cmsd/xrootd start DAEMON_COREFILE_LIMIT=\"unlimited\" RHEL6: variable set in /etc/sysconfig/xrootd or set as root ulimit -c unlimited RHEL7: you can use /etc/sysconfig/xrootd but prepare override file /etc/systemd/system/cmsd@clustered.service.d/override.conf with content: [Service] EnvironmentFile=-/etc/sysconfig/xrootd","title":"Core from unexpected process quit"},{"location":"ops/troubleshoot/#core-from-running-process","text":"directly if you know PID: $ gdb --pid=PID_NR (gdb) gcore if you know process name (e.g. xrootd): `$ gcore $(pidof xrootd)`","title":"Core from running process"},{"location":"ops/troubleshoot/#core-from-not-running-process","text":"by default, XRootD should leave core file in the /var/spool/xrootd/ when it crashes","title":"Core from not running process:"},{"location":"ops/upgrades/","text":"OSG StashCache Upgrade Status This page is used to track the status of hardware and software used for the StashCache service within the OSG community. Please update your status when you complete an upgrade. Currently monitored StashCache resources (Origins, Caches, Redirectors) are included in the RSV tests . 2018 Table of Caches Hosting site Hostname XRootD version OS CPU RAM Disk (cache) space Disk configuration Connectivity Notes Last update Syracuse its-condor-xrootd1.syr.edu xrootd-4.8.2-0.1.rc1.osg34.el7.x86_64 CentOS 7.2.1511 Intel(R) Xeon(R) CPU E7-8890 v4 @ 2.20GHz (8 cores) 65GB 16TB 10Gbps 05-01-2018 BNL osgxroot.usatlas.bnl.gov FZU stash.farm.particle.cz 4.8.0-1.osg34 CentOS 7.4.1708 2x Xeon(R) E5-2630 v4 @2.20GHz 128GB 30TB 5x8TB, RAID-Z1, ZFS, 1TB NVMe Cache 10Gbps Container 2-2-2018 Nebraska hcc-stash.unl.edu 4.8.2-1.osg34 CentOS 7.4.1708 2x (8 core) Intel(R) Xeon(R) Gold 6134 CPU @ 3.20GHz 394GB ~1.5TB NVMe 40Gbps 05-01-2018 UChicago stashcache.grid.uchicago.edu 4.7.1-1 SL 7.3 2x Xeon(R) E5440 @2.83GHz 32GB 60TB 5x 12TB arrays, RAID6, XFS, bound with oss.space 2x10Gbps Old dCache node, probably not optimally tuned for XRootD 11-07-2017 UIllinois mwt2-stashcache.campuscluster.illinois.edu 4.6.1-0.2.rc3.osg33 VM 4CPUS 16GB 100TB GPFS on DDN via FDR IB 10Gbps 04-28-2017 UCSD xrd-cache-1.t2.ucsd.edu xrootd-4.8.2-1.osg34 CentOS 6.8 2x Xeon(R) E5-2650 v3 @2.30GHz w/HT (40 cores total) 128GB 21.8TB 6x 3.6TB, XFS, individual disks bound with oss.space 10Gbps The same machine runs hdfs-healing xrootd cache on another set of 6 independent disks. We can move more disks to StashCache if needed. 10-28-2016 2017 Table of Caches Hosting site Hostname XRootD version OS CPU RAM Disk (cache) space Disk configuration Connectivity Notes Last update Syracuse its-condor-xrootd1.syr.edu xrootd-server-4.7.0-1.osg33.el7.x86_64 CentOS 7.2.1511 Intel(R) Xeon(R) CPU E5-2699 v3 @ 2.30GHz (8 cores) 65GB 16TB 10Gbps 11-03-2017 BNL osgxroot.usatlas.bnl.gov FZU stash.farm.particle.cz 4.8.0-1.osg34 CentOS 7.4.1708 2x Xeon(R) E5-2630 v4 @2.20GHz 128GB 30TB 5x8TB, RAID-Z1, ZFS, 1TB NVMe Cache 10Gbps Container 2-2-2018 Nebraska hcc-stash.unl.edu 4.6.1-0.2.pre3.hcc CentOS 7.2.1511 2x Xeon (R) E5530 @2.4GHz w/HT (8 real cores) 24GB 19TB 12x 2TB SATA in RAID6, XFS 10Gbps 04-06-2017 UChicago stashcache.grid.uchicago.edu 4.7.1-1 SL 7.3 2x Xeon(R) E5440 @2.83GHz 32GB 60TB 5x 12TB arrays, RAID6, XFS, bound with oss.space 2x10Gbps Old dCache node, probably not optimally tuned for XRootD 11-07-2017 UIllinois mwt2-stashcache.campuscluster.illinois.edu 4.6.1-0.2.rc3.osg33 VM 4CPUS 16GB 100TB GPFS on DDN via FDR IB 10Gbps 04-28-2017 UCSD xrd-cache-1.t2.ucsd.edu 4.5.0-0.5.beta CentOS 6.8 2x Xeon(R) E5-2650 v3 @2.30GHz w/HT (40 cores total) 128GB 21.8TB 6x 3.6TB, XFS, individual disks bound with oss.space 10Gbps The same machine runs hdfs-healing xrootd cache on another set of 6 independent disks. We can move more disks to StashCache if needed. 10-28-2016","title":"OSG StashCache Upgrade Status"},{"location":"ops/upgrades/#osg-stashcache-upgrade-status","text":"This page is used to track the status of hardware and software used for the StashCache service within the OSG community. Please update your status when you complete an upgrade. Currently monitored StashCache resources (Origins, Caches, Redirectors) are included in the RSV tests .","title":"OSG StashCache Upgrade Status"},{"location":"ops/upgrades/#2018-table-of-caches","text":"Hosting site Hostname XRootD version OS CPU RAM Disk (cache) space Disk configuration Connectivity Notes Last update Syracuse its-condor-xrootd1.syr.edu xrootd-4.8.2-0.1.rc1.osg34.el7.x86_64 CentOS 7.2.1511 Intel(R) Xeon(R) CPU E7-8890 v4 @ 2.20GHz (8 cores) 65GB 16TB 10Gbps 05-01-2018 BNL osgxroot.usatlas.bnl.gov FZU stash.farm.particle.cz 4.8.0-1.osg34 CentOS 7.4.1708 2x Xeon(R) E5-2630 v4 @2.20GHz 128GB 30TB 5x8TB, RAID-Z1, ZFS, 1TB NVMe Cache 10Gbps Container 2-2-2018 Nebraska hcc-stash.unl.edu 4.8.2-1.osg34 CentOS 7.4.1708 2x (8 core) Intel(R) Xeon(R) Gold 6134 CPU @ 3.20GHz 394GB ~1.5TB NVMe 40Gbps 05-01-2018 UChicago stashcache.grid.uchicago.edu 4.7.1-1 SL 7.3 2x Xeon(R) E5440 @2.83GHz 32GB 60TB 5x 12TB arrays, RAID6, XFS, bound with oss.space 2x10Gbps Old dCache node, probably not optimally tuned for XRootD 11-07-2017 UIllinois mwt2-stashcache.campuscluster.illinois.edu 4.6.1-0.2.rc3.osg33 VM 4CPUS 16GB 100TB GPFS on DDN via FDR IB 10Gbps 04-28-2017 UCSD xrd-cache-1.t2.ucsd.edu xrootd-4.8.2-1.osg34 CentOS 6.8 2x Xeon(R) E5-2650 v3 @2.30GHz w/HT (40 cores total) 128GB 21.8TB 6x 3.6TB, XFS, individual disks bound with oss.space 10Gbps The same machine runs hdfs-healing xrootd cache on another set of 6 independent disks. We can move more disks to StashCache if needed. 10-28-2016","title":"2018 Table of Caches"},{"location":"ops/upgrades/#2017-table-of-caches","text":"Hosting site Hostname XRootD version OS CPU RAM Disk (cache) space Disk configuration Connectivity Notes Last update Syracuse its-condor-xrootd1.syr.edu xrootd-server-4.7.0-1.osg33.el7.x86_64 CentOS 7.2.1511 Intel(R) Xeon(R) CPU E5-2699 v3 @ 2.30GHz (8 cores) 65GB 16TB 10Gbps 11-03-2017 BNL osgxroot.usatlas.bnl.gov FZU stash.farm.particle.cz 4.8.0-1.osg34 CentOS 7.4.1708 2x Xeon(R) E5-2630 v4 @2.20GHz 128GB 30TB 5x8TB, RAID-Z1, ZFS, 1TB NVMe Cache 10Gbps Container 2-2-2018 Nebraska hcc-stash.unl.edu 4.6.1-0.2.pre3.hcc CentOS 7.2.1511 2x Xeon (R) E5530 @2.4GHz w/HT (8 real cores) 24GB 19TB 12x 2TB SATA in RAID6, XFS 10Gbps 04-06-2017 UChicago stashcache.grid.uchicago.edu 4.7.1-1 SL 7.3 2x Xeon(R) E5440 @2.83GHz 32GB 60TB 5x 12TB arrays, RAID6, XFS, bound with oss.space 2x10Gbps Old dCache node, probably not optimally tuned for XRootD 11-07-2017 UIllinois mwt2-stashcache.campuscluster.illinois.edu 4.6.1-0.2.rc3.osg33 VM 4CPUS 16GB 100TB GPFS on DDN via FDR IB 10Gbps 04-28-2017 UCSD xrd-cache-1.t2.ucsd.edu 4.5.0-0.5.beta CentOS 6.8 2x Xeon(R) E5-2650 v3 @2.30GHz w/HT (40 cores total) 128GB 21.8TB 6x 3.6TB, XFS, individual disks bound with oss.space 10Gbps The same machine runs hdfs-healing xrootd cache on another set of 6 independent disks. We can move more disks to StashCache if needed. 10-28-2016","title":"2017 Table of Caches"}]}